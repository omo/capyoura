
= 2009-9-26(Sat) =

== 作業開始 ==

ざっと appengine のドキュメントよんで NOTE.txt 書いた. 何からやるか...

なんとなく Web UI を作ってデバッグ可能にしたい気がする. 
が, 拡張からの XHR がちゃんとクッキーつきで動くかも気になる. 
でも gmail notifier とかあるんだからまー cookie はつくと期待して
UI づくりとかやっちゃうのがいいかな. dashboard つくるか.

== Issues ==

 * テンプレート： python のテンプレートはろくなのがない...
   * 冒険はせずチュートリアルにあった djaongo のやつにしとく
 * json : 2.5 には標準ではいってない
   * pure python のがあったはずなので持ってくる(あとで)
 * テスト
   * 基本ナシ. まーシンプルだし許してもらう. 
   * 世間がどうしてんのは一通り動いたら調べる
 * scheduled task
   * 一通り動いてから考える

== PEP333 ==

そのうちよむ

== あとで ==

 * 古い visits のフィルタアウト

== XXX ==

HTML のレイアウトを抜き出すには？

== UI ==

とりあえずできた. 酷いミタメだけど動かすの優先. 
つぎ API. 

= 2009-9-27(Sun) =

== クライアント作業 ==

 * 起動時に list をロード -> done
 * visit を background に通知 -> done
 * cap を content scirpt に通知
   * 送信 @ background -> done
   * 受信 @ content script -> done
 * 受信した cap を解釈 -> done
   * tooltip だす -> done
   * full なら警告を出す -> done
 * dashboard 訪問時に list をリロード
 * サインインを促す
 * visit リセット -> done

== キャッシュ ==

/cap/list はキャッシュした方が良いかもなー. ブラウザ起動の度にロードする...

== visit リセット ==

早いとこつけないとダメだなー. デバッグで必須. -> つけた.

== 拡張 ==

サーバからロードしたいなあ. JS をサーバから読めばいいのか.  まあそのうち...

== 時間制限 ==

expire して閉じちゃうよりは, expire するたびに 1 visit を消費する方が面白いかもな.
びみょう. あとで.

== とりあえず ==

最低限は動いたかなー.
あとは:

 * サインインうながす -> done
 * dashboard で自動 list リロード -> done
 * capScreen のミタメをもう少しなんとかする -> done
 * ウェブの外見をなんとかする -> done
   * レイアウト抜き出し -> done
 * トップページをつくる -> done
 * crx パッケージつくる : つくるのは chrome からできそう
   * 簡単そうなら自動化
 * ダウンロード案内 @ toppage
 * autoupdate

== 無駄に ==

トップページをがんばって書いてしまった...ブラフすぎる. 

== Pack extension ... ==

クリックしてもなにも起きないのですが... 未実装? -> ドキュメントみるかんじできそうなんだけど. 

コマンドラインから呼べるのか.

{{{
[....browser_init.cc(782)] Not implemented reached in static bool 
BrowserInit::ProcessCmdLineImpl(const CommandLine&, const std::wstring&, bool, Profile*, int*, BrowserInit*)
extension creation not implemented on POSIX.
}}}

あらら.

 * http://d.hatena.ne.jp/Constellation/20090911/1252672391

わーお. すげーこれだよ!

== リリース! ==

誰にも公開はしないので気持ちの上で。しばらく dogfood しつつちまい改善をやることにしよう.
NOTE より

 * DONE: dashboard で溢れているエントリを目立たせる
 * DONE: 初期サイトを入れる
 * DONE: 完全にデータを削除する
 * ホスト名より大きな単位 (ex. 2ch.net) で制限できる

あとアイコンの透過色はいまいちだった. 背景と同じ色にしよう. -> やった

= 2009-9-29(Tue) =

== dogfood ==

したら出たバグを色々なおした. update も動いた. いえー.

ほか細かいことと:

 * DONE: opacity: 0.9 は逆に気持を煽っているのではないか
 * DONE: cap screen 表示後一定時間たったら無理矢理閉じて良いんじゃないか.


= 2009-9-30(Wed) =

== count -> time series ==

なおした. すげーはまった. これは crx のバグと言って良いとおもうんだけど....まあ週末に shoot しよう. 
trunk では直ってるといいんだけど. 

 * DONE: カウントダウンをクリックするとカウントダウンとめる

= 2009-10-10(Sat)

一週間いじょうぶりか...

== AJAX サイト対応 ==

基本方針:

 * > main.py
   * DONE: timer を整数でなく実数に.
 * > content.js
   * DONE: cap にタイマーがあったら定期的に visit を発行する
   * DONE: cap 通知が複数回届くのに備える - UI の書き直し
 * > background.js
   * DONE: visit を受け取った時, 送信元の tab が selected かを確認する

== スキーマ変更 ==

プロパティの型を変更するとどうなんだろ. 

-> ギャー! エラー! どうやって migration すりゃいいんだこれ？

== チャート表示 ==

明日かなー...どうやろう？

 * dashboard に出す？
 * meter に出す？
 * capscreen の画面に出す？

recording diet 的にはいつでも見えた方がいいんだろうけど, 
JS 共有するのはそれなりにめんどい. 
絵的に面白いのは cap screen. ただじっと見る時間はない. 
dashboard に出すのは無難だけど, レイアウトがちょっと大変は気はする. 
dashboard で lightbox ぽく出すのがオシャレかもしんない. 
でも lightbox って img 以外にも使えるんかな. まああとで調べよう. 


== 2009-10-11(Sun) ==

さて, 3 時間くらいでできるかなーチャート. ちょっとムリメかなー...

方針:

 * DONE: チャートを書くだけの HTML をつくる
 * DONE: クエリー文字列を読んで XHR してデータをとり, グラフを書く
 * DONE: dashboard からチャートの HTML を iframe で pop する

bug:
 * DONE: リサイズに反応しない
 * XXXX: ylabel が端数をまるめている時ヘン. (limit=3 とか.) -> まるめるのやめた.
 * DONE: xlabel の時間は偶数にまるめたい. 刻みが買わると気分わるい. 

== 一通りできた気が. ==

チェックインは明日以降みなおしてから. ねる.

== バージョン ==

あげわすれた...

== あとは... ==

 * DONE: キャップ画面からジャンプした場合に最初からチャート表示
 * DONE: タイマーがある場合に目減りするメーター表示
   -> 非表示なタブの扱いがめんどい. あとで. -> なんとかした
 * スクリーンショットとりなおす -> あとで

 * XXXX: meter に バツボタンをつける

== タイマー ==

今は content.js 側で処理しているけど, 実は background.js に持っていった方がいいのかなー. 
tab の activeness をチェックできるから... 
でもページを閉じた時に timer がリークしないかとか, 微妙に管理が面倒な気もする. んー. 
下手に分担しても通信量が増えるし悩ましい. 

が, 通信する方が良い気がしてきた. 

 * background.js: visit には active の有無は無関係に反応する
 * content.js: 毎秒 "passing" を送る to background.js 
 * background.js: active だったら "passed" を返す to content.js
 * content.js: 実時間のうち |passed|/|passing| を active な経過時間とみなす
 * content.js: active な経過時間が timer を越えたら revisit する

-> なおした.

== ↑ついでに ==

目減りバーをつけた...若干うるさいかもしらんけどまあ...
